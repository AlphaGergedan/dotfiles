# ~/.zshrc
#
# zsh config file for my workstations
#
#########################################

# Environment
export VISUAL="nvim"
export EDITOR="nvim"
export WORDCHARS="*?_-.[]~=&;!#$%^(){}<>"
export HISTFILE="${HOME}/.zsh/zhistory"
export HISTFILESIZE=10000000
export HISTSIZE=10000000
export HISTTIMEFORMAT="[%F %T] "
export SAVEHIST=10000000
export LESS_TERMCAP_mb=$'\e[1;31m'  # Begin blinking
export LESS_TERMCAP_md=$'\e[1;31m'  # Begin bold
export LESS_TERMCAP_me=$'\e[0m'     # End mode
export LESS_TERMCAP_se=$'\e[0m'     # End standout-mode
export LESS_TERMCAP_so=$'\e[01;44;33m'  # Begin standout-mode - info box
export LESS_TERMCAP_ue=$'\e[0m'     # End underline
export LESS_TERMCAP_us=$'\e[1;32m'  # Begin underline
export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# Options
setopt AUTO_CD
setopt NUMERIC_GLOB_SORT
setopt APPEND_HISTORY
setopt INC_APPEND_HISTORY
setopt EXTENDED_HISTORY
setopt HIST_FIND_NO_DUPS
setopt HIST_IGNORE_ALL_DUPS

# Aliases
alias ls="ls --color=auto"                                  # nice colorings
alias l="ls -F --group-directories-first"
alias ll="l -lah"                                           # human readable, dereference, list all
alias grep='grep --colour=auto'
alias egrep='egrep --colour=auto'
alias fgrep='fgrep --colour=auto'
alias rg='grep --colour=auto'
alias cp="cp -i"                                            # confirm before overwriting something
alias df='df -h'                                            # human-readable sizes
alias free='free -m'                                        # show sizes in MB
alias more='nvim -R'
alias o='nvim -R'
alias less='nvim -R'
alias ..="cd ../"
alias ...="cd ../../"
alias cd..="cd .."
alias disk-usage="du -hd 1"                                      # memory usage in the current dir
alias show="whence"                                         # binary location of a command
alias include-path-c="echo | gcc -x c -E -Wp,-v - >/dev/null"
alias include-path-cpp="echo | gcc -x c++ -E -Wp,-v - >/dev/null"
alias g='git'
alias gac='git add . && git commit'
alias gpul='git pull'
alias gpus='git push'
alias gcom='git commit'
alias gsta='git status'
alias gdif='git diff'
alias cpuinfo="grep 'cpu MHz' /proc/cpuinfo"
alias cpu-available-frequencies="cat /sys/devices/system/cpu/cpu*/cpufreq/scaling_available_frequencies"
alias cpu-available-governos="cat /sys/devices/system/cpu/cpu0/cpufreq/scaling_available_governors"
alias path="echo $PATH"
alias e="nvim"

# Functions
mem_pid() {
  ps -p $1 -o rss | tail -n 1 | awk '{print $1/1024/1024 " GB"}'
}
mem_name() {
  ps aux | grep $1 | grep -v grep | awk '{print $6/1024/1024 " GB"}'
}

watch_mem_pid() {
    watch -n $2 "ps -p $1 -o rss | tail -n 1 | awk '{print \$1/1024/1024 \" GB\"}'"
}
watch_mem_name() {
    watch -n $2 "ps aux | grep $1 | grep -v grep | awk '{print \$6/1024/1024 \" GB\"}'"
}
git-large-files() {
  while read -r largefile; do
    echo $largefile | awk '{printf "%s %s ", $1, $3 ; system("git rev-list --all --objects | grep " $1 " | cut -d \" \" -f 2-")}'
      done <<< "$(git rev-list --all --objects | awk '{print $1}' | git cat-file --batch-check | sort -k3nr | head -n 20)"
}

# Keybindings
bindkey -v
bindkey "^?" backward-delete-char       # Backspace key
bindkey "^U" backward-kill-line         # CTRL-U
bindkey "^W" backward-kill-word         # CTRL-W
bindkey "^[[3~" delete-char             # Delete key
bindkey "^Y" yank                       # CTRL-Y
bindkey "^[[C" forward-char             # Right key
bindkey "^[[D" backward-char            # Left key
bindkey '^[Oc' forward-word
bindkey '^[Od' backward-word
bindkey '^[[1;5D' backward-word
bindkey '^[[1;5C' forward-word

# Pure
fpath+="${HOME}/.zsh/pure"
autoload -Uz promptinit compinit
PURE_PROMPT_SYMBOL=' â†£'
PURE_PROMPT_VICMD_SYMBOL=' â†¢'
PURE_GIT_DOWN_ARROW='â†§' # PULL
PURE_GIT_UP_ARROW='â†¥'
PURE_GIT_STASH_SYMBOL='ðŸ“¦'
promptinit
prompt pure
zstyle ':prompt:pure:git:branch' color 'red'
zstyle ':prompt:pure:virtualenv' color 'cyan'
zstyle ':prompt:pure:git:dirty' color 'cyan'
zstyle ':prompt:pure:user' color 22
zstyle ':prompt:pure:host' color 25

# Completion
zstyle ':completion:*' rehash true
zstyle ':completion:*' accept-exact '*(N)'
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path ~/.zsh/cache
fpath=($HOME/.zsh/zsh-completions/src $fpath)
zstyle ':completion:*' matcher-list 'm:{a-zA-Z}={A-Za-z}' 'r:|=*' 'l:|=*' 'r:|=*'
compinit
source $HOME/.zsh/zsh-completions/zsh-completions.plugin.zsh

# Syntax highlighting
if [ -e "${HOME}/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh" ]; then
  source "${HOME}/.zsh/zsh-syntax-highlighting/zsh-syntax-highlighting.zsh"
fi

# History substring search
if [ -e "${HOME}/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh" ]; then
  source "${HOME}/.zsh/zsh-history-substring-search/zsh-history-substring-search.zsh"
  # For fish-like history search plugin. These needs to be bind after syntax highlighting
  bindkey "^K" history-substring-search-up   # CTRL+ALT+k
  bindkey "^J" history-substring-search-down # CTRL+ALT+J
fi

# Rust
# TODO
#. "${HOME}/.cargo/env"

# Anaconda
# TODO
#__conda_setup="$('~/.conda' 'shell.zsh' 'hook' 2> /dev/null)"
#if [ $? -eq 0 ]; then
    #eval "$__conda_setup"
#else
    #if [ -f "~/.conda/etc/profile.d/conda.sh" ]; then
        #. "~/.conda/etc/profile.d/conda.sh"
    #else
        #export PATH="~/.conda/bin:$PATH"
    #fi
#fi
#unset __conda_setup

# NVM
# TODO
#export NVM_DIR="$HOME/.nvm"
#[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
#[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Docker

# Startup
# TODO

